// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	models "library-comp/models"

	mock "github.com/stretchr/testify/mock"
)

// AuthorRepository is an autogenerated mock type for the AuthorRepository type
type AuthorRepository struct {
	mock.Mock
}

// CreateAuthor provides a mock function with given fields: authorDetails
func (_m *AuthorRepository) CreateAuthor(authorDetails models.Author) (models.Author, error) {
	ret := _m.Called(authorDetails)

	var r0 models.Author
	if rf, ok := ret.Get(0).(func(models.Author) models.Author); ok {
		r0 = rf(authorDetails)
	} else {
		r0 = ret.Get(0).(models.Author)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Author) error); ok {
		r1 = rf(authorDetails)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAuthor provides a mock function with given fields: id
func (_m *AuthorRepository) DeleteAuthor(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAuthor provides a mock function with given fields: id
func (_m *AuthorRepository) GetAuthor(id int) (models.Author, error) {
	ret := _m.Called(id)

	var r0 models.Author
	if rf, ok := ret.Get(0).(func(int) models.Author); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Author)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetListOfAuthors provides a mock function with given fields:
func (_m *AuthorRepository) GetListOfAuthors() ([]models.Author, error) {
	ret := _m.Called()

	var r0 []models.Author
	if rf, ok := ret.Get(0).(func() []models.Author); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Author)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAuthor provides a mock function with given fields: authorDetails
func (_m *AuthorRepository) UpdateAuthor(authorDetails models.Author) (models.Author, error) {
	ret := _m.Called(authorDetails)

	var r0 models.Author
	if rf, ok := ret.Get(0).(func(models.Author) models.Author); ok {
		r0 = rf(authorDetails)
	} else {
		r0 = ret.Get(0).(models.Author)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Author) error); ok {
		r1 = rf(authorDetails)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
